use libc;
extern "C" {
    /* Generated by wayland-scanner 1.17.0 */
    /*
 * Copyright Â© 2018 Ilia Bozhinov
 *
 * Permission to use, copy, modify, distribute, and sell this
 * software and its documentation for any purpose is hereby granted
 * without fee, provided that the above copyright notice appear in
 * all copies and that both that copyright notice and this permission
 * notice appear in supporting documentation, and that the name of
 * the copyright holders not be used in advertising or publicity
 * pertaining to distribution of the software without specific,
 * written prior permission.  The copyright holders make no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied
 * warranty.
 *
 * THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS
 * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS, IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 * THIS SOFTWARE.
 */
    #[no_mangle]
    static wl_output_interface: wl_interface;
    #[no_mangle]
    static wl_seat_interface: wl_interface;
    #[no_mangle]
    static wl_surface_interface: wl_interface;
}
#[derive ( Copy, Clone )]
#[repr(C)]
pub struct wl_message {
    pub name: *const libc::c_char,
    pub signature: *const libc::c_char,
    pub types: *mut *const wl_interface,
}
#[derive ( Copy, Clone )]
#[repr(C)]
pub struct wl_interface {
    pub name: *const libc::c_char,
    pub version: libc::c_int,
    pub method_count: libc::c_int,
    pub methods: *const wl_message,
    pub event_count: libc::c_int,
    pub events: *const wl_message,
}
static mut types: [*const wl_interface; 11] =
    unsafe {
        [0 as *const wl_interface,
         &zwlr_foreign_toplevel_handle_v1_interface as *const wl_interface,
         &wl_seat_interface as *const wl_interface,
         &wl_surface_interface as *const wl_interface,
         0 as *const wl_interface, 0 as *const wl_interface,
         0 as *const wl_interface, 0 as *const wl_interface,
         &wl_output_interface as *const wl_interface,
         &wl_output_interface as *const wl_interface,
         &wl_output_interface as *const wl_interface]
    };
// Initialized in run_static_initializers
static mut zwlr_foreign_toplevel_manager_v1_requests: [wl_message; 1] =
    [wl_message{name: 0 as *const libc::c_char,
                signature: 0 as *const libc::c_char,
                types: 0 as *mut *const wl_interface,}; 1];
// Initialized in run_static_initializers
static mut zwlr_foreign_toplevel_manager_v1_events: [wl_message; 2] =
    [wl_message{name: 0 as *const libc::c_char,
                signature: 0 as *const libc::c_char,
                types: 0 as *mut *const wl_interface,}; 2];
#[no_mangle]
pub static mut zwlr_foreign_toplevel_manager_v1_interface: wl_interface =
    unsafe {
        {
            let mut init =
                wl_interface{name:
                                 b"zwlr_foreign_toplevel_manager_v1\x00" as
                                     *const u8 as *const libc::c_char,
                             version: 2i32,
                             method_count: 1i32,
                             methods:
                                 zwlr_foreign_toplevel_manager_v1_requests.as_ptr(),
                             event_count: 2i32,
                             events:
                                 zwlr_foreign_toplevel_manager_v1_events.as_ptr(),};
            init
        }
    };
// Initialized in run_static_initializers
static mut zwlr_foreign_toplevel_handle_v1_requests: [wl_message; 10] =
    [wl_message{name: 0 as *const libc::c_char,
                signature: 0 as *const libc::c_char,
                types: 0 as *mut *const wl_interface,}; 10];
// Initialized in run_static_initializers
static mut zwlr_foreign_toplevel_handle_v1_events: [wl_message; 7] =
    [wl_message{name: 0 as *const libc::c_char,
                signature: 0 as *const libc::c_char,
                types: 0 as *mut *const wl_interface,}; 7];
#[no_mangle]
pub static mut zwlr_foreign_toplevel_handle_v1_interface: wl_interface =
    unsafe {
        {
            let mut init =
                wl_interface{name:
                                 b"zwlr_foreign_toplevel_handle_v1\x00" as
                                     *const u8 as *const libc::c_char,
                             version: 2i32,
                             method_count: 10i32,
                             methods:
                                 zwlr_foreign_toplevel_handle_v1_requests.as_ptr(),
                             event_count: 7i32,
                             events:
                                 zwlr_foreign_toplevel_handle_v1_events.as_ptr(),};
            init
        }
    };
unsafe extern "C" fn run_static_initializers() {
    zwlr_foreign_toplevel_manager_v1_requests =
        [{
             let mut init =
                 wl_message{name:
                                b"stop\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         }];
    zwlr_foreign_toplevel_manager_v1_events =
        [{
             let mut init =
                 wl_message{name:
                                b"toplevel\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"n\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(1),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"finished\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         }];
    zwlr_foreign_toplevel_handle_v1_requests =
        [{
             let mut init =
                 wl_message{name:
                                b"set_maximized\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"unset_maximized\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"set_minimized\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"unset_minimized\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"activate\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"o\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(2),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"close\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"set_rectangle\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"oiiii\x00" as *const u8 as
                                    *const libc::c_char,
                            types: types.as_mut_ptr().offset(3),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"destroy\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"set_fullscreen\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"2?o\x00" as *const u8 as
                                    *const libc::c_char,
                            types: types.as_mut_ptr().offset(8),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"unset_fullscreen\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"2\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         }];
    zwlr_foreign_toplevel_handle_v1_events =
        [{
             let mut init =
                 wl_message{name:
                                b"title\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"s\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"app_id\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"s\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"output_enter\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"o\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(9),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"output_leave\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"o\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(10),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"state\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"a\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"done\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         },
         {
             let mut init =
                 wl_message{name:
                                b"closed\x00" as *const u8 as
                                    *const libc::c_char,
                            signature:
                                b"\x00" as *const u8 as *const libc::c_char,
                            types: types.as_mut_ptr().offset(0),};
             init
         }]
}
#[used]
#[cfg_attr ( target_os = "linux", link_section = ".init_array" )]
#[cfg_attr ( target_os = "windows", link_section = ".CRT$XIB" )]
#[cfg_attr ( target_os = "macos", link_section = "__DATA,__mod_init_func" )]
static INIT_ARRAY: [unsafe extern "C" fn(); 1] = [run_static_initializers];
